[
{
	"uri": "/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Ứng dụng: Elastic Beanstalk trực tiếp lấy mã dự án của chúng ta. Vì thế Elastic Beanstalk application được đặt tên giống với thư much chính của dự án.\nCác môi trường ứng dụng: Người dùng muốn ứng dụng của họ được triển khai trên nhiều môi trường khác nhau như DEV, UAT, và PROD. Bạn có thể ạo và cấu hình nhiều môi trường khác nhau để triển khai ứng dụng trên các giai đoạn khác nhau.\nCô lập: Tất cả các môi trường bên trong một ứng dụng được cô lập với nhau (độc lập với trạng thái hoạt động của nhau). Không cần phải nói, hai ứng dụng khác nhau cũng sẽ bị cô lập với nhau.\nKhả năng co giãn: Sử dụng Auto-Scaling trong Elastic Beanstalk làm cho ứng dụng có khả năng mở rộng linh hoạt.\nBộ cân bằng tải đàn hổi (ELB): Tất cả lượng yêu cầu từ web đến ứng dụng không được chuyển trực tiếp đến các máy chủ của ứng dụng. Chúng sẽ gặp Bộ cân bằng tải đàn hồi (ELB) đầu tiên, cân bằng tải trên tất cả các máy chủ ứng dụng.\nNgôn ngữ hổ trợ: Elastic Beanstalk hổ trợ các ứng dụng được phát triển với Java, .NET, PHP, Node.js, Python, Ruby, Go, và Docker trên các máy chủ quen thuộc như Apache, Nginx, Passenger, và IIS.\nChi phí: Không có bất kỳ chi phí phát sinh nào cho việc sử dụng Elastic Beanstalk. Người dùng chỉ cần phải chi trả cho các dịch vụ và tài nguyên được tạo ra bởi Elastic Beanstalk Service.\n"
},
{
	"uri": "/vi/",
	"title": "Triển khai ứng dụng sử dụng Beanstalk",
	"tags": [],
	"description": "",
	"content": "Triển khai ứng dụng sử dụng Beanstalk Tổng quan Với AWS Elastic Beanstalk, bạn có thể nhanh chóng triển khai và quản lý các ứng dụng trên Đám mây AWS mà không phải lo lắng về cơ sở hạ tầng chạy các ứng dụng đó. AWS Elastic Beanstalk giảm độ phức tạp trong quản lý mà không hạn chế lựa chọn hoặc kiểm soát. Bạn chỉ cần tải ứng dụng của mình lên và AWS Elastic Beanstalk sẽ tự động xử lý các chi tiết về cung cấp công suất, cân bằng tải, thay đổi quy mô và theo dõi tình trạng ứng dụng.\nNội dung  Giới thiệu Chuẩn bị Tạo môi trường phát triển trong Elastic Beanstalk Tạo môi trường sản phẩm trong Elastic Beanstalk Cập nhật ứng dụng trong môi trường phát triển Hoán đổi URL giữa hai môi trường Dọn dẹp tài nguyên  "
},
{
	"uri": "/vi/2-preparation/2.1-createkeypair/",
	"title": "Tạo môi trường phát triển trong Elastic Beanstalk",
	"tags": [],
	"description": "",
	"content": " Đi đến AWS Management Console   Tìm EC2 Chọn EC2   Trong trang giao diện của EC2, chọn Key Pairs. Nhấn vào Create Key Pair.  Nhập tên của key pair FCJ-KeyPair. Tại mục Key pair type, chọn RSA. Tại mục Private key file format, chọn .pem. Nhấn Create key pair để tạo. Hãy đảm bảo rằng tệp key pair vừa tạo đã được tải xuống máy tính của bạn\n\r  "
},
{
	"uri": "/vi/2-preparation/",
	"title": "Chuẩn bị",
	"tags": [],
	"description": "",
	"content": "Các bước chuẩn bị  Key Pair: Để SSH đến máy chủ EC2 vừa được cung cấp bởi Elastic Beanstalk IAM service role: Elastic Beanstalk đảm nhận vai trò dịch vụ để sử dụng các dịch vụ khác của AWS. Service role đã tồn tại sẵn trên tài khoản của bạn và bạn có thể tạo môi trường mới trong bảng điều khiển Elastic Beanstalk hoặc sử dụng Elastic Beanstalk CLI. IAM instance role: Elastic Beanstalk áp dụng instances profile đến máy chủ trong môi trường của bạn. Nó cho phép chúng thực hiện:  Truy xuất các phiên bản ứng dụng từ Amazon Simple Storage Service (Amazon S3). Đăng tải nhật ký lên Amazon S3. Thực hiện các tác vụ khác tùy thuộc vào loại môi trường và nền tảng.    Nội dung 2.1. Tạo Key Pair.\n2.2. Tạo IAM instance role.\n"
},
{
	"uri": "/vi/2-preparation/2.2-createinstancerole/",
	"title": "Tạo IAM role cho EB service",
	"tags": [],
	"description": "",
	"content": "1.Đi đến AWS Management Console.\n Tìm IAM. Chọn IAM.    Trong giao diện IAM, chọn Roles.\n  Trong giao diện Role, tìm kiếm role tên là aws-elasticbeanstalk-ec2-role.\n  Nếu role đã tồn tại, bạn có thể bỏ qua bước này và đi đến 3. Create Develop environment in Elastic Beanstalk.\n  Kiểm tra và đảm bảo rằng role đã được tạo với 3 policies AWSElasticBeanstalkWebTier, AWSElasticBeanstalkWorkerTier and AWSElasticBeanstalkMulticontainerDocker.\n\r Nếu role chưa tồn tại, bạn có thể tạo role mới bằng việc nhấn Create role.   Tại giao diện Trusted entity type:\n Chọn AWS service. Tại Use case, tìm kiếm và chọn EC2 là service. Chọn EC2 là use case. Sau đó nhấn Next.     Sau đó, tìm kiếm và thêm các policies AWSElasticBeanstalkWebTier, AWSElasticBeanstalkWorkerTier và AWSElasticBeanstalkMulticontainerDocker.   Nhập tên của role aws-elasticbeanstalk-ec2-role.   Cuộn xuống và kiểm tra 3 policies AWSElasticBeanstalkWebTier, AWSElasticBeanstalkWorkerTier và AWSElasticBeanstalkMulticontainerDocker đã được thêm. Sau đó, nhấn Create role để tạo role.   "
},
{
	"uri": "/vi/3-createdevenv/",
	"title": "Tạo môi trường phát triển trong Elastic Beanstalk",
	"tags": [],
	"description": "",
	"content": "  Tải xuống source code nodejs.zip\n  Đi đến AWS Management Console\n  Tìm kiếm từ khóa Elastic Beanstalk và chọn.   Nhấn Create Application.   Trong mục Configure environment.\n    Chọn Web server environment\n  Trong phần Application name, nhập tên ứng dụng của bạn. Ví dụ: FCJ-My-First-App.\n  Trong phần Environment name, nhập FCJ-My-First-App-env-DEV cho môi trường phát triển.   Trong phần Platform, chọn NodeJS\n  Trong phần Application code, chọn Upload your code.\n  Trong phần Version lable , nhập V1-Green_DEV\n  Sau đó chọn Local file và nhấn Choose file để tải lên source code của bạn từ máy tính cá nhân.   Trong phần Presets, chọn Single instance (free tier eligible). Sau đó nhấn Next.    Trong giao diện Configure service access:\n Tại Service role, chọn Use an existing role. Tại Existing service roles, chọn role aws-elasticbeanstalk-service-role. Tại EC2 key pair, chọn FCJ-KeyPair. Tại EC2 instance profile, chọn role aws-elasticbeanstalk-ec2-role. Sau đó nhấn Skip to review để đi đến bước tiếp theo.     Cuộn xuống và nhấn Submit để tạo ứng dụng và môi trường của nó.   Kiểm tra kết quả, môi trường đang được tạo. Quá trình này có thể mất đến 5 phút để hoàn thành.\n\r  Kiểm tra kết quả sau khi môi trường được tạo thành công.   Nhấn Domain của môi trường để thấy kết quả ứng dụng của bạn.   Lưu ý rằng nền của môi trường phát triển hiện tại là Xanh lá.\n\rChuyển hướng đến EC2 Dashboard. Nhấn Instance. Bạn sẽ thấy máy chủ tên FCJ-My-First-App-env-DEV vừa được tạo bởi Elastic Beanstalk.  Chọn máy chủ và sao chép Public IP address.  SSH đến máy chủ với Public IP address và FCJ-KeyPair vừa tạo ở 2.1-Create Key Pair   "
},
{
	"uri": "/vi/4-createprodenv/",
	"title": "Tạo môi trường sản phẩm trong Elastic Beanstalk",
	"tags": [],
	"description": "",
	"content": "  Đi đến AWS Management Console\n  Tìm kiếm từ khóa Elastic Beanstalk và chọn.   Nhấn Application và nhấn vào ứng dụng vừa được tạo.   Nhấn Create environment để tạo môi trường sản phẩm.   Nhập tên của môi trường FCJ-My-First-App-env-PROD tại Environment name.\n Chọn NodeJS tại Platform.  Chọn Upload your code tại Application code Nhập V1-GREEN-PROD tại Version label Chọn Local file và nhấn nút Choose file để tải lên source code của bạn. Chọn tệp nodejs.zip mà bạn vừa tải xuống. Nhấn High availability tại Presets. Sau đó nhấn Next để đi đến bước tiếp theo.     Trong giao diện Configure service access:\n Tại Service role, chọn Use an existing role. Tại Existing service roles, chọn role aws-elasticbeanstalk-service-role. Tại EC2 key pair, chọn FCJ-KeyPair. Tại EC2 instance profile, chọn role aws-elasticbeanstalk-ec2-role. Sau đó nhấn Skip to review để đi đến bước tiếp theo.     Cuộn xuống và nhấn Submit để tạo môi trường.   Kiểm tra kết quả, môi trường đang được tạo. Quá trình này có thể mất đến 5 phút để hoàn thành.\n\r  Kiểm tra kết quả sau khi môi trường được tạo thành công.   Nhấn Domain của môi trường để kiểm tra kết quả. Lưu ý rằng nền của môi trường sản phẩm hiện tại là Xanh lá.\n\r  Chuyển hướng đến EC2 Dashboard.\n  Nhấn Instance. Bạn sẽ thấy máy chủ tên FCJ-My-First-App-env-PROD vừa được tạo bởi Elastic Beanstalk.   Nhấn Auto Scaling Groups, bạn sẽ thấy 2 ASGs được tạo.\n ASG với Max = 4, thuộc về môi trường FCJ-My-First-App-env-PROD. ASG với Max = 1, thuộc về môi trường FCJ-My-First-App-env-DEV.     Nhấn Load Balancers, bạn sẽ thấy 1 ALB được tạo.\n Chọn ALB. Nhấn Listeners and rules. Nhấn target group phía dưới.     Trong giao diện Target Group, tại Registered targets bạn có thể thấy máy chủ thuộc về môi trường FCJ-My-First-App-env-PROD. Một ASG và ALB được tạo ra trong môi trường sản phẩm vì bạn đã chọn High availability tại Presets khi cấu hình Elastic Beanstalk.\n\r  "
},
{
	"uri": "/vi/5-updateappinenv/",
	"title": "Cập nhật ứng dụng trong môi trường phát triển",
	"tags": [],
	"description": "",
	"content": "  Giản nén tệp nodejs.zip như tập tin với tên là nodejs-V2.   Mở tập tin nodejs-V2, chỉnh sửa tệp index.html.\n Tại dòng 38, thay thế 73A53E với 0000FF và lưu.     Nén tất cả các tệp trong tập tin nodejs-V2 thành nodejs-V2.zip. Bạn có thể tải xuống source code nodejs-V2.zip để bỏ qua các bước trên.\n\r  Đi đến Environment của Elastic Beanstalk.\n  Nhấn vào môi trường FCJ-My-First-App-env-DEV.   Nhấn Upload and deploy.   Tại giao diện Upload and deploy.\n Nhấn nút Choose file để tải lên source code từ máy tính cá nhân. Chọn và tải lên tệp tên nodejs-V2.zip. Nhập V2-BLUE-DEV tại Version label. Nhấn Deploy.     Sau vài giây, ứng dụng của bạn đã được tải lên môi trường phát triển thành công. Nhấn Domain để xem kết quả.   Tại thời điểm này, nền của môi trường phát triển là Xanh dương và môi trường sản phẩm là Xanh lá.\n\r"
},
{
	"uri": "/vi/6-swapurlbetweentwoenv/",
	"title": "Hoán đổi URL giữa hai môi trường",
	"tags": [],
	"description": "",
	"content": "Bởi vì AWS Elastic Beanstalk thực hiện cập nhật tại chỗ khi bạn cập nhật phiên bản ứng dụng của bạn, ứng dụng của bạn sẽ trở nên không khả dụng đến người dùng trong một khoảng thời gian ngắn. Để tránh việc này, thực hiện triển khai blue/green. Để làm điều này, triển khai một phiên bản mới ở môi trường riêng biệt, và sau đó chuyển đổi CNAMEs của hai môi trường để điều hướng lưu lượng đến phiên bản mới ngay lập tức.\nTrong phần này, chúng ta sẽ chỉ tập trung vào việc làm thế nào để chuyển đổi URL giữa hai môi trường (Phát triển và sản phẩm).\n\r Đi đến Environment của Elastic Beanstalk. Chọn môi trường FCJ-My-First-App-env-DEV, nhấn Action và chọn Swap environment domain.  Tại Environment, chọn FCJ-My-First-App-env-PROD. Sau đó, nhấn Swap.  Sau đó, truy cập tên miền của môi trường FCJ-My-First-App-env-DEV và FCJ-My-First-App-env-PROD để thấy kết quả.  Nền của môi trường FCJ-My-First-App-env-DEV hiện tại là Xanh lá và URL là FCJ-My-First-App-env-PROD.xxx.ap-southeast-1.elasticbeanstalk.com. Nền của môi trường FCJ-My-First-App-env-PROD hiện tại là Xanh dương và URL là FCJ-My-First-App-env-DEV.xxx.ap-southeast-1.elasticbeanstalk.com.    Như vậy, hai URLs của hai môi trường đã được chuyển đổi cho nhau. "
},
{
	"uri": "/vi/7-delete/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "Xoá ứng dụng Elastic Beanstalk  Đi đến Applicaiton của Elastic Beanstalk. Chọn ứng dụng FCJ-My-First-App, nhấn Action và chọn Delete application.  Nhập tên ứng dụng FCJ-My-First-App để xóa.   Xóa Key Pair  Đi đến Key Pair Chọn key pair FCJ-KeyPair, nhấn Action và chọn Delete. Nhập Delete và nhấn Delete   "
},
{
	"uri": "/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]